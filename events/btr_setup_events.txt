
namespace = btr_setup

# Kill Vanilla Countries
event = {
	id = btr_setup.100
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = {
				is_country_type = default
				NOT = { has_country_flag = btr_empire }
				is_ai = yes
			}
			erase_invalid_spawn_system = yes
		}
	}
}

# Add starting resources
country_event = {
	id = btr_setup.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_resource = { energy = 200	}
		add_resource = { minerals = 200 }
		add_resource = { alloys = 200	}
		add_resource = { influence = 200 }
		add_resource = { food = 400	}
		add_resource = { consumer_goods = 200 }
	}
}

country_event = {
    id = btr_setup.2
	hide_window = yes
    is_triggered_only = yes
    immediate = { 		
        random_owned_pop = {
            limit = { is_same_species_class = root.owner_main_species }
            modify_species = { 
                species = this 
                base = none 
                effect = { save_event_target_as = temp_species }
            }
        }
        if = {
            limit = { exists = event_target:temp_species event_target:temp_species = { is_same_species_class = root.owner_main_species } }
            change_dominant_species = { species = event_target:temp_species change_all = yes }
        }
    }
}

event = {
    id = btr_setup.201
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galaxy_species = {
			switch = {
				trigger = is_species_class
				MECASA = {
					set_homeworld = {
						planet_flag = "thessia_planet"
						planet_type = "normal"
					}
				}	
				SAL = {
					set_homeworld = {
						planet_flag = "surkesh_planet"
						planet_type = "normal"
					}			
				}
				TUR = {
					set_homeworld = {
						planet_flag = "palaven_planet"
						planet_type = "normal"
					}			
				}
				ELC = {
					set_homeworld = {
						planet_flag = "dekuuna_planet"
						planet_type = "normal"
					}			
				}
				HAN = {
					set_homeworld = {
						planet_flag = "kahje_planet"
						planet_type = "normal"
					}			
				}
				HUM = {
					set_homeworld = {
						planet_flag = "earth_planet"
						planet_type = "normal"
					}			
				}
				VOL = {
					set_homeworld = {
						planet_flag = "irune_planet"
						planet_type = "normal"
					}			
				}
				BAT = {
					set_homeworld = {
						planet_flag = "kharshan_planet"
						planet_type = "normal"
					}			
				}
				DRE = {
					set_homeworld = {
						planet_flag = "rakhana_planet"
						planet_type = "normal"
					}			
				}
				KRO = {
					set_homeworld = {
						planet_flag = "tuchanka_planet"
						planet_type = "normal"
					}			
				}
				FOR = {
					set_homeworld = {
						planet_flag = "regdika_planet"
						planet_type = "normal"
					}			
				}
				YAH = {
					set_homeworld = {
						planet_flag = "parnack_planet"
						planet_type = "normal"
					}			
				}
				VOR = {
					set_homeworld = {
						planet_flag = "heshtok_planet"
						planet_type = "normal"
					}			
				}
				GET = {
					set_homeworld = {
						planet_flag = "rannoch_planet"
						planet_type = "normal"
					}			
				}
				GOT = {
					set_homeworld = {
						planet_flag = "vindicta_planet"
						planet_type = "normal"
					}			
				}
			}
		}
	}
}

  country_event = {
	id = btr_setup.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_modifier = {
			modifier = mec_asari_mod_origin_thessia_stagnation
			years = 20
		}
		random_owned_planet = {
			limit = { 
				has_planet_flag = thessia_planet 
			}
			create_archaeological_site = mec_asari_site_thessia_beacon
		}
		if = {
			limit = {
				has_origin = mec_asari_origin_thessia
				any_system_within_border = {
					has_star_flag = parnitha_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = tomaros_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = ialessa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = orisoni_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = vernio_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = teyolia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = kypladon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = nahuala_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = fotia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = mitrios_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = elensia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = pelion_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = mesana_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = agaiou_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = kallini_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = aspoda_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = vrastir_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = myrtil_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = statheta_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_turian_hierarchy
				any_system_within_border = {
					has_star_flag = trebia_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = orachorum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = navale_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = castellus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = centrixaurum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = gemmae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = caestus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = arrae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = nura_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = talava_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = mactare_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = narbo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = laudate_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = sabulum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = terevan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = nedlus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = cersea_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = kasatum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = cete_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = cameram_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = spinam_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = gramen_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = ursantra_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = pistrix_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_salarian_union
				any_system_within_border = {
					has_star_flag = pranas_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = fortuna_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = ruoshca_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = vothi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = rothila_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = maceddei_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = gorot_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = sovak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = limron_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = antillin_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = vildisa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = anunilibse_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = bedi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = strabo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = bowani_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = ardot_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = ilhani_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = aezeni_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = endera_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = reslom_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = turix_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = judor_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = ostelo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = totau_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_courts_of_dekuuna
				any_system_within_border = {
					has_star_flag = phontes_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = bisalas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = resyadum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = salahiel_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = batalla_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = loropi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = wadoa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
			random_system = {
				limit = {
					has_star_flag = nasdora_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_illuminated_primacy
				any_system_within_border = {
					has_star_flag = kanala_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = obek_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
			random_system = {
				limit = {
					has_star_flag = stabiae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
			random_system = {
				limit = {
					has_star_flag = dark_current_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
			random_system = {
				limit = {
					has_star_flag = thundering_trench_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
			random_system = {
				limit = {
					has_star_flag = warmest_shoal_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
			random_system = {
				limit = {
					has_star_flag = herculaneum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_systems_alliance
				any_system_within_border = {
					has_star_flag = sol_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = sirius_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = 61ursaemajoris_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = arcturus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = euler_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = asgard_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = utopia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = baldr_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = iota_persei_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = vetus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = selvandia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = boltzmann_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = yuan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = carrini_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = petralia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = 42518p_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = sm2183_rua_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = svarga_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = asramas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
			random_system = {
				limit = {
					has_star_flag = alpha_centauri_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_vol_protectorate
				any_system_within_border = {
					has_star_flag = aru_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = menarel_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = yakawa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = cobines_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = omaverizh_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = uba_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = esori_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = satuaard_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = lebnatch_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = lobu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = burun_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = unok_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = veskyur_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
			random_system = {
				limit = {
					has_star_flag = sanu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_batarian_hegemony
				any_system_within_border = {
					has_star_flag = harsa_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = indris_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = koshlanhk_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = vular_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = untrel_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = gravnez_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = shuoma_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = foillavas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = ruotht_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = fathar_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = urdupos_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = bahak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = chelae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = kesd_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = hadassah_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = elam_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = drakhar_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = urdupos_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
			random_system = {
				limit = {
					has_star_flag = urk_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_krogan_chiefdom
				any_system_within_border = {
					has_star_flag = aralakh_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = dranek_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:krogan_chiefdom
				}
			}
			random_system = {
				limit = {
					has_star_flag = nith_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:krogan_chiefdom
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_regdikan_collective
				any_system_within_border = {
					has_star_flag = nosikae_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = brizhiine_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = onricidae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = serdicina_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = tiikren_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = cedinae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = lisiine_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = okred_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
			random_system = {
				limit = {
					has_star_flag = suryan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:regdikan_collective
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_geth_consensus
				any_system_within_border = {
					has_star_flag = tikkun_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = kholas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
			}
			random_system = {
				limit = {
					has_star_flag = caarehyosal_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
			}
			random_system = {
				limit = {
					has_star_flag = dholen_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
			}
			random_system = {
				limit = {
					has_star_flag = maat_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
			}
			random_system = {
				limit = {
					has_star_flag = disul_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_gothones_remnant
				any_system_within_border = {
					has_star_flag = ultio_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = han_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:gothones_remnant
				}
			}
			random_system = {
				limit = {
					has_star_flag = ming_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:gothones_remnant
				}
			}
			random_system = {
				limit = {
					has_star_flag = wigat_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:gothones_remnant
				}
			}
		}
		if = {
			limit = {
				has_origin = mec_asari_origin_illium
				any_system_within_border = {
					has_star_flag = tasale_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = zelene_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_corporate_interests
				}
			}
			random_system = {
				limit = {
					has_star_flag = lusarn_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_corporate_interests
				}
			}
			random_system = {
				limit = {
					has_star_flag = ondeste_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_corporate_interests
				}
			}
		}
		if = {
			limit = {
				has_country_flag = citadel_council
				any_system_within_border = {
					has_star_flag = widow_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = phoenix_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:citadel_council
				}
			}
			random_system = {
				limit = {
					has_star_flag = tomdak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:citadel_council
				}
			}
		}
		if = {
			limit = {
				has_country_flag = cerberus
				any_system_within_border = {
					has_star_flag = anadius_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = strenuus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus
				}
			}
			random_system = {
				limit = {
					has_star_flag = columbia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus
				}
			}
			random_system = {
				limit = {
					has_star_flag = yangtze_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus
				}
			}
			random_system = {
				limit = {
					has_star_flag = amazon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus
				}
			}
		}
		if = {
			limit = {
				has_country_flag = heretic_geth
				any_system_within_border = {
					has_star_flag = theseaofstorms_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = yeelixeeme_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = yassu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = seefisgaca_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = haelazi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = xelazi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = sesost_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = jaavo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = keelulon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = raadarum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = gaalozozh_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
			random_system = {
				limit = {
					has_star_flag = ruvum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:heretic_geth
				}
			}
		}
		if = {
			limit = {
				has_country_flag = cat6
				any_system_within_border = {
					has_star_flag = elunia_system
				}
			}	
			random_system = {
				limit = {
					has_star_flag = elunia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cat6
				}
			}
		}
	}
}


# country_event = {
#     id = btr_setup.2
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = mec_asari_origin_thessia
# 			}
# 			save_event_target_as = mec_asari_thessia_country
# 			species = { save_event_target_as = mec_asari_thessia_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = mec_asari_origin_illium
# 			}
# 			save_event_target_as = mec_asari_illium_country
# 			species = { save_event_target_as = mec_asari_illium_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_omega
# 			}
# 			save_event_target_as = btr_asari_omega_country
# 			species = { save_event_target_as = btr_asari_omega_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:mec_asari_thessia_country
# 					is_same_value = event_target:mec_asari_illium_country
# 					is_same_value = event_target:btr_asari_omega_country
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:mec_asari_main_country }
# 				}
# 				save_global_event_target_as = mec_asari_main_country
# 				species = { save_global_event_target_as = mec_asari_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:mec_asari_planet_thessia
# 					}
# 					event_target:mec_asari_main_species = {
# 						set_species_homeworld = event_target:mec_asari_planet_thessia
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:mec_asari_main_country
# 					OR = {
# 						species = { is_same_value = event_target:mec_asari_thessia_species }
# 						species = { is_same_value = event_target:mec_asari_illium_species }
# 						species = { is_same_value = event_target:btr_asari_omega_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:mec_asari_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# country_event = {
#     id = btr_setup.201
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = origin_salarian_union
# 			}
# 			save_event_target_as = btr_salarian_union_country
# 			species = { save_event_target_as = btr_salarian_surkesh_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_noveria_development_corporation
# 			}
# 			save_event_target_as = btr_noveria_development_corporation_country
# 			species = { save_event_target_as = btr_salarian_noveria_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:btr_salarian_union_country
# 					is_same_value = event_target:btr_noveria_development_corporation_country
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:btr_salarian_main_country }
# 				}
# 				save_global_event_target_as = btr_salarian_main_country
# 				species = { save_global_event_target_as = btr_salarian_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:btr_salarian_planet_surkesh
# 					}
# 					event_target:btr_salarian_main_species = {
# 						set_species_homeworld = event_target:btr_salarian_planet_surkesh
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:btr_salarian_main_country
# 					OR = {
# 						species = { is_same_value = event_target:btr_salarian_surkesh_species }
# 						species = { is_same_value = event_target:btr_salarian_noveria_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:btr_salarian_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# country_event = {
#     id = btr_setup.202
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = origin_systems_alliance
# 			}
# 			save_event_target_as = btr_systems_alliance_country
# 			species = { save_event_target_as = btr_human_earth_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_cerberus
# 			}
# 			save_event_target_as = btr_cerberus_country
# 			species = { save_event_target_as = btr_human_cronos_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:btr_systems_alliance_country
# 					is_same_value = event_target:btr_human_cronos_species
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:btr_human_main_country }
# 				}
# 				save_global_event_target_as = btr_human_main_country
# 				species = { save_global_event_target_as = btr_human_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:btr_human_planet_earth
# 					}
# 					event_target:btr_human_main_species = {
# 						set_species_homeworld = event_target:btr_human_planet_earth
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:btr_human_main_country
# 					OR = {
# 						species = { is_same_value = event_target:btr_human_earth_species }
# 						species = { is_same_value = event_target:btr_human_cronos_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:btr_human_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# Set Volus as Protectorate
country_event = {
	id = btr_setup.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = event_target:vol_protectorate exists = event_target:turian_hierarchy }
			event_target:vol_protectorate = {
				establish_communications_no_message = event_target:turian_hierarchy
				set_subject_of = { who = event_target:turian_hierarchy subject_type = special_protectorate }
			}
		}
		if = {
			limit = { exists = event_target:asteria_agriculture exists = event_target:asari_republics }
			event_target:asteria_agriculture = {
				establish_communications_no_message = event_target:asari_republics
				set_subject_of = { who = event_target:asari_republics subject_type = subsidiary }				
			}
		}
	}
}

# this: capital planet
# from: founder species
planet_event = {
	id = btr_setup.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NOR = {
					has_planet_flag = btr_systems_alliance_planet_earth
					has_planet_flag = btr_systems_alliance_planet_mars
					has_planet_flag = btr_collectors_collector_station
					has_planet_flag = btr_cerberus_cronos_station
				}
			}
			generate_btr_start_deposits_and_blockers = yes
		}
	}
}


# Omega Setup continued
country_event = {
	id = btr_setup.6
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_owned_pop_species = {
			limit = {
				NOR = { 
					is_species_class = MECASA 
				}
			}
			set_citizenship_type = { country = root type = citizenship_full cooldown = no }
			set_living_standard = { country = root type = living_standard_normal cooldown = no }
		}
	}
}

# Set Minor Empires
country_event = {
	id = btr_setup.7
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				has_country_flag = btr_minor
			}
			add_modifier = {
				modifier = btr_minor_empire
				days = 10950
			}
			limit = {
				has_country_flag = independent_colony
			}
			add_modifier = {
				modifier = btr_independent_colony
				days = -1
			}
		}
	}
}

country_event = {
	id = btr_setup.8
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { 
				has_country_flag = parnack_regime_player 
			}
			random_owned_planet = {
					limit = {
						has_planet_flag = parnack_planet
					}
				generate_btr_parnack_regime_capitol_buildings = yes
			}
		}
	}
}

#Pregame Genocide
country_event = {
	id = btr_setup.9
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_ai = no }
			every_country = {
				every_owned_pop = {
					limit = { NOT = { has_pop_flag = init_spawn } }
					kill_pop = yes
				}
				every_country = {
					every_owned_planet = {
						check_planet_employment = yes				
					}
				}	 	 
			}
		}
	}
}
# This sets the names for megacorp empires because buggy and this temp fixes it
# Code is self explanatory I think if country has that flag change name to name set
country_event = {
	id = btr_setup.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asari_republics
				}
				set_name = "Asari Republics"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = salarian_union
				}
				set_name = "Salarian Union"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = turian_hierarchy
				}
				set_name = "Turian Hierarchy"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = courts_of_dekuuna
				}
				set_name = "Courts of Dekuuna"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = illuminated_primacy
				}
				set_name = "Illuminated Primacy"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = systems_alliance
				}
				set_name = "Systems Alliance"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = vol_protectorate
				}
				set_name = "Vol Protectorate"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = batarian_hegemony
				}
				set_name = "Batarian Hegemony"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = cerberus
				}
				set_name = "Cerberus"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = remnants_of_rakhana
				}
				set_name = "Remnants of Rakhana"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = krogan_chiefdom
				}
				set_name = "Krogan Chiefdom"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = lystheni_order
				}
				set_name = "Lystheni Order"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = omega_empire
				}
				set_name = "Omega"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = quarian_conclave
				}
				set_name = "Quarian Conclave"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = gothones_remnant
				}
				set_name = "Gothones Remnant"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = regdikan_collective
				}
				set_name = "Regdikan Collective"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = parnack_regime_primitive
				}
				set_name = "Parnack Regime"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = parnack_regime_player
				}
				set_name = "Parnack Regime"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = raloi_republic
				}
				set_name = "Raloi Republic"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = vorcha_clandom
				}
				set_name = "Vorcha Clandom"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asari_corporate_interests
				}
				set_name = "Asari Corporate Interests"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = noveria_development_corporation
				}
				set_name = "Noveria Development Corporation"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = relic_mineral_works
				}
				set_name = "Relic Mineral Works"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = united_anhur_corporations
				}
				set_name = "United Anhur Corporations"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = wrill_mining_consortium
				}
				set_name = "Wrill Mining Consortium"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asteria_agriculture
				}
				set_name = "Asteria Agriculture"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = collectors
				}
				set_name = "The Collectors"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = geth_consensus
				}
				set_name = "Geth Consensus"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = heretic_geth
				}
				set_name = "Heretic Geth"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = rachni_swarm
				}
				set_name = "Rachni Swarm"
			}
		}
	}
}

country_event = {
	id = btr_setup.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#Colony
		if = {
			limit = {
				has_country_flag = quarian_conclave
			}
			create_fleet = {
				effect = {
					set_owner = event_target:quarian_conclave

					create_ship = {
						name = Rayya
						random_existing_design = colonizer
					}

					set_fleet_stance = evasive
					#set_location = prev.capital_star
					set_location = prev.capital_scope.star
				}	
			}

			#constructor
			create_fleet = {
				effect = {
					set_owner = prev

					create_ship = {
						name = random
						random_existing_design = constructor
					}

					set_fleet_stance = evasive
					set_location = prev.capital_star
				}
			}

			#military
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = prev

					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}

					while = {
						count = 5
						create_ship = {
							name = random
							random_existing_design = destroyer
						}
					}

					while = {
						count = 3
						create_ship = {
							name = random
							random_existing_design = cruiser
						}
					}

					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = battleship
						}
					}

					set_location = prev.capital_star
				}
			}
		}
	}	
}

