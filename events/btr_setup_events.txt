
namespace = btr_setup
# Add starting resources
country_event = {
	id = btr_setup.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				galaxy_size = btr_sandbox_400
				#has_global_flag = playing_sandbox
			}
			add_resource = { energy = 200	}
			add_resource = { minerals = 200 }
			add_resource = { alloys = 200	}
			add_resource = { influence = 50 }
			add_resource = { food = 200	}
			add_resource = { consumer_goods = 200 }
		}
		if = {
			limit = {
				has_country_flag = asari_republics
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 5000	}
			add_resource = { minerals = 4000 }
			add_resource = { alloys = 3000	}
			add_resource = { influence = 1000 }
			add_resource = { food = 3500	}
			add_resource = { consumer_goods = 1500 }
		}
		if = {
			limit = {	
				has_country_flag = salarian_union
				#galaxy_size = btr_hybrid_400
			}	
			add_resource = { energy = 2600	}
			add_resource = { minerals = 1480 }
			add_resource = { alloys = 1100	}
			add_resource = { influence = 1000 }
			add_resource = { food = 3350	}
			add_resource = { consumer_goods = 1200 }
		}
		if = {
			limit = {
				has_country_flag = turian_hierarchy
				#galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 3500	}
			add_resource = { minerals = 2650 }
			add_resource = { alloys = 2000	}
			add_resource = { influence = 1000 }
			add_resource = { food = 2800	}
			add_resource = { consumer_goods = 1000 }
		}
		if = {
			limit = {
				has_country_flag = courts_of_dekuuna
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1900	}
			add_resource = { minerals = 1200 }
			add_resource = { alloys = 450	}
			add_resource = { influence = 500 }
			add_resource = { food = 2500 }
			add_resource = { consumer_goods = 1010 }
		}
		if = {
			limit = {	
				has_country_flag = illuminated_primacy
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1850	}
			add_resource = { minerals = 1240 }
			add_resource = { alloys = 440	}
			add_resource = { influence = 500 }
			add_resource = { food = 2700	}
			add_resource = { consumer_goods = 1000 }
		}
		if = {
			limit = {
				has_country_flag = systems_alliance
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 2950	}
			add_resource = { minerals = 3500 }
			add_resource = { alloys = 3050	}
			add_resource = { influence = 800 }
			add_resource = { food = 2000	}
			add_resource = { consumer_goods = 1500 }
		}
		if = {
			limit = {
				has_country_flag = vol_protectorate
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 3100	}
			add_resource = { minerals = 1240 }
			add_resource = { alloys = 950	}
			add_resource = { influence = 500 }
			add_resource = { food = 2150	}
			add_resource = { consumer_goods = 1400 }
		}
		if = {
			limit = {
				has_country_flag = batarian_hegemony	
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1200	}
			add_resource = { minerals = 600 }
			add_resource = { alloys = 340	}
			add_resource = { influence = 600 }
			add_resource = { food = 1700	}
			add_resource = { consumer_goods = 450 }
		}
		if = {
			limit = {
				has_country_flag = remnants_of_rakhana	
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 300	}
			add_resource = { minerals = 200 }
			add_resource = { alloys = 200	}
			add_resource = { influence = 100 }
			add_resource = { food = 150	}
			add_resource = { consumer_goods = 100 }
		}
		if = {
			limit = {
				has_country_flag = aralakh_kahmat
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 400	}
			add_resource = { minerals = 200 }
			add_resource = { alloys = 200	}
			add_resource = { influence = 100 }
			add_resource = { food = 400	}
			add_resource = { consumer_goods = 100 }
		}
		if = {
			limit = { 
				has_country_flag = lystheni_order
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 800	}
			add_resource = { minerals = 400 }
			add_resource = { alloys = 200	}
			add_resource = { influence = 100 }
			add_resource = { food = 1000	}
			add_resource = { consumer_goods = 250 }
		}
		if = {
			limit = {
				has_country_flag = migrant_fleet
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1500	}
			add_resource = { minerals = 1000 }
			add_resource = { alloys = 750	}
			add_resource = { influence = 200 }
			add_resource = { food = 1450	}
			add_resource = { consumer_goods = 250 }
		}
		if = {
			limit = {	
				has_country_flag = parnack_regime_player
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1000	}
			add_resource = { minerals = 500 }
			add_resource = { alloys = 350 }
			add_resource = { influence = 100 }
			add_resource = { food = 1000 }
			add_resource = { consumer_goods = 300 }
		}
		if = {
			limit = {
				has_country_flag = raloi_republic
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 450	}
			add_resource = { minerals = 200 }
			add_resource = { alloys = 250	}
			add_resource = { influence = 100 }
			add_resource = { food = 1300	}
			add_resource = { consumer_goods = 520 }
		}
		if = {
			limit = {
				has_country_flag = vorcha_clandom
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 620	}
			add_resource = { minerals = 250 }
			add_resource = { alloys = 250	}
			add_resource = { influence = 100 }
			add_resource = { food = 750	}
			add_resource = { consumer_goods = 300 }
		}
		if = {
			limit = {
				has_country_flag = geth_consensus
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 12000	}
			add_resource = { minerals = 12000 }
			add_resource = { alloys = 12000	}
			add_resource = { influence = 1000 }
		}
		if = {
			limit = {
				has_country_flag = rachni_hive
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 800	}
			add_resource = { minerals = 350 }
			add_resource = { alloys = 250	}
			add_resource = { influence = 100 }
			add_resource = { food = 1540	}
		}
		if = {
			limit = {
				has_country_flag = gothones_remnant
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 950	}
			add_resource = { minerals = 420 }
			add_resource = { alloys = 250	}
			add_resource = { influence = 100 }
			add_resource = { food = 1200	}
			add_resource = { consumer_goods = 400 }
		}
		if = {
			limit = {
				has_country_flag = illium_corporate_interests
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1900	}
			add_resource = { minerals = 710 }
			add_resource = { alloys = 400	}
			add_resource = { influence = 100 }
			add_resource = { food = 1100	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = cerberus_empire
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1500	}
			add_resource = { minerals = 1000 }
			add_resource = { alloys = 1200 }
			add_resource = { influence = 700 }
			add_resource = { food = 900	}
			add_resource = { consumer_goods = 400 }
		}
		if = {
			limit = {
				has_country_flag = disciples_of_nazara
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 10000	}
			add_resource = { minerals = 10000 }
			add_resource = { alloys = 10000	}
			add_resource = { influence = 1000 }
		}
		if = {
			limit = {
				has_country_flag = citadel_council
			}
			add_resource = { energy = 7500	}
			add_resource = { minerals = 7500 }
			add_resource = { alloys = 7500	}
			add_resource = { influence = 100 }
			add_resource = { food = 7500	}
			add_resource = { consumer_goods = 7500 }
		}
		if = {
			limit = {
				has_country_flag = noveria_development_corporation
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 500 }
			add_resource = { alloys = 350	}
			add_resource = { influence = 100 }
			add_resource = { food = 1350	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = omega_empire
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 800	}
			add_resource = { minerals = 600 }
			add_resource = { alloys = 250	}
			add_resource = { influence = 100 }
			add_resource = { food = 1400	}
			add_resource = { consumer_goods = 400 }
		}
		if = {
			limit = {
				has_country_flag = relic_mineral_works
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 2500 }
			add_resource = { alloys = 1350	}
			add_resource = { influence = 100 }
			add_resource = { food = 1350	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = asteria_agriculture
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 500 }
			add_resource = { alloys = 350	}
			add_resource = { influence = 100 }
			add_resource = { food = 3500	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = united_anhur_corporations
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 2500 }
			add_resource = { alloys = 1350	}
			add_resource = { influence = 100 }
			add_resource = { food = 1350	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = wrill_mining_consortium
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 2500 }
			add_resource = { alloys = 1350	}
			add_resource = { influence = 100 }
			add_resource = { food = 1350	}
			add_resource = { consumer_goods = 800 }
		}
		if = {
			limit = {
				has_country_flag = collectors_empire
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 2000	}
			add_resource = { minerals = 1330 }
			add_resource = { alloys = 1250	}
			add_resource = { influence = 100 }
			add_resource = { food = 2050	}
		}
		if = {
			limit = {
				has_country_flag = sedriicae_collective
				galaxy_size = btr_hybrid_400
			}
			add_resource = { energy = 1150	}
			add_resource = { minerals = 2500 }
			add_resource = { alloys = 1350 }
			add_resource = { influence = 100 }
			add_resource = { food = 1350	}
			add_resource = { consumer_goods = 800}
		}
	}
}

#Pregame Genocide
event = {
	id = btr_setup.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			if = {
				limit = {
					is_country_type = default
					is_country_type = neutral_faction
					is_country_type = rebel
					is_country_type = enclave
					is_country_type = tiyanki
					is_country_type = tiyanki_garrison
					is_country_type = amoeba
					is_country_type = amoeba_borderless
					is_country_type = amoeba_garrison
					is_country_type = crystal
					is_country_type = drone
					NOT = { has_country_flag = btr_empire }
					is_ai = yes
				}
				destroy_country = yes
				every_owned_pop = {	
					limit = { 
						NOT = { 
							 has_pop_flag = init_spawn 
						}
					}
					kill_pop = yes
				}
			}
			if = {
				limit = {
					has_country_flag = btr_empire
				}
				every_owned_pop = {
					limit = { NOT = { has_pop_flag = init_spawn } }
					kill_pop = yes
				}
				every_country = {
					every_owned_planet = {
						check_planet_employment = yes				
					}
				}
			}
		}
	}
}

country_event = {
	id = btr_setup.103
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_country_flag = asari_republics }
			add_modifier = {
				modifier = mec_asari_mod_origin_thessia_stagnation
				years = 20
			}
		}	
		random_owned_planet = {
			limit = { has_planet_flag = thessia_planet }
			# create_archaeological_site = mec_asari_site_thessia_beacon
			set_capital = yes
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = btr_origin_asrep
				any_system_within_border = {
					has_star_flag = parnitha_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = parnitha_system
				}
				create_starbase = {
					size = starbase_starhold
					module = shipyard
					module = shipyard
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					building = fleet_academy
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = nahuala_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = elensia_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = pelion_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = resource_silo
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = myrtil_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = tomaros_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ialessa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = orisoni_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vernio_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = teyolia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kypladon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = fotia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = mitrios_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = mesana_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = agaiou_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kallini_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = aspoda_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vrastir_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = statheta_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = loropi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = btr_origin_turhie
				any_system_within_border = {
					has_star_flag = trebia_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = palaven_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = trebia_system
				}
				create_starbase = {
					size = starbase_starhold
					module = shipyard
					module = shipyard
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					building = fleet_academy
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = cersea_system
				}
				create_starbase = {
					size = starbase_starhold
					module = shipyard
					module = shipyard
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					building = fleet_academy
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kasatum_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = terevan_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ursantra_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = resource_silo
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = orachorum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = navale_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = castellus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = centrixaurum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gemmae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = caestus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = arrae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = nura_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = talava_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = mactare_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = narbo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = laudate_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sabulum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = nedlus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}

			random_system = {
				limit = {
					has_star_flag = cete_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = cameram_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = spinam_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gramen_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = pistrix_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = fortis_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_salarian_union
				any_system_within_border = {
					has_star_flag = pranas_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = surkesh_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = pranas_system
				}
				create_starbase = {
					size = starbase_starhold
					module = shipyard
					module = shipyard
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					building = fleet_academy
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = fortuna_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = limron_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ostelo_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = totau_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = resource_silo
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ruoshca_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vothi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = rothila_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = maceddei_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gorot_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sovak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = antillin_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vildisa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = anunilibse_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = bedi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = strabo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = bowani_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ardot_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ilhani_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = aezeni_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = endera_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = reslom_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = turix_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = judor_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_courts_of_dekuuna
				any_system_within_border = {
					has_star_flag = phontes_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = dekuuna_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = phontes_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = hydroponics_bay
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = bisalas_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = resyadum_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = salahiel_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = batalla_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = wadoa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = nasdora_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = aquila_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:courts_of_dekuuna
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_illuminated_primacy
				any_system_within_border = {
					has_star_flag = kanala_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = dark_current_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = hydroponics_bay
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = dark_current_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = herculaneum_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = kahje_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = obek_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = stabiae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = thundering_trench_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = warmest_shoal_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illuminated_primacy
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = btr_origin_sysall
				any_system_within_border = {
					has_star_flag = sol_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = earth_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = sol_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = arcturus_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = iota_persei_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vetus_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = utopia_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sirius_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = 61ursaemajoris_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}

			random_system = {
				limit = {
					has_star_flag = euler_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = asgard_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = baldr_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = selvandia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = boltzmann_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = yuan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = carrini_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = petralia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = 42518p_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sm2183_rua_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = svarga_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = asramas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = alpha_centauri_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:systems_alliance
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_vol_protectorate
				any_system_within_border = {
					has_star_flag = aru_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = irune_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = aru_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = menarel_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = yakawa_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = cobines_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = burun_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = unok_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = veskyur_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = uba_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = omaverizh_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = esori_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = satuaard_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lebnatch_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lobu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sanu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:vol_protectorate
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_batarian_hegemony
				any_system_within_border = {
					has_star_flag = harsa_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = kharshan_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = harsa_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = koshlanhk_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = untrel_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gravnaz_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = indris_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}

			random_system = {
				limit = {
					has_star_flag = vular_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = shuoma_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = foillavas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ruotht_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = fathar_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = urdupos_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = bahak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = chelae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kesd_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = hadassah_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = elam_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = drakhar_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = urdupos_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = urk_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:batarian_hegemony
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_aralakh_kahmat
				any_system_within_border = {
					has_star_flag = aralakh_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = tuchanka_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = aralakh_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = hydroponics_bay
					owner = event_target:aralakh_kahmat
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = dranek_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:aralakh_kahmat
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = nith_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:aralakh_kahmat
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = btr_origin_sedcol
				any_system_within_border = {
					has_star_flag = nosikae_system
				}
			}
			limit = { 
				has_origin = btr_origin_sedcol
				add_modifier = {
					modifier = btr_sedcol_stagnation
					years = 20
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = regdika_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = nosikae_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = serdicina_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = cedinae_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = brizhiine_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = onricidae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = tiikren_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lisiine_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = okred_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = suryan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:sedriicae_collective
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = btr_origin_getcon
				any_system_within_border = {
					has_star_flag = tikkun_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = rannoch_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = tikkun_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = fleet_academy
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = dholen_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = fleet_academy
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = maat_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = fleet_academy
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = raadarum_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = crew_quarters
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kholas_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = caarehyosal_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}

			random_system = {
				limit = {
					has_star_flag = disul_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}	
			random_system = {
				limit = {
					has_star_flag = jaavo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = keelulon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gaalozozh_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ruvum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:geth_consensus
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = origin_gothones_remnant
				any_system_within_border = {
					has_star_flag = ultio_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = vindicta_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = ultio_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:gothones_remnant
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = han_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:gothones_remnant
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ming_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:gothones_remnant
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = wigat_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:gothones_remnant
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_origin = mec_asari_origin_illium
				any_system_within_border = {
					has_star_flag = tasale_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = illium_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = tasale_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:illium_corporate_interests
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = zelene_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:illium_corporate_interests
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lusarn_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = offworld_trading_company
					owner = event_target:illium_corporate_interests
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = ondeste_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:illium_corporate_interests
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				has_country_flag = citadel_council
				any_system_within_border = {
					has_star_flag = widow_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = citadel_station
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = widow_system
				}
				create_starbase = {
					size = starbase_starhold
					module = trading_hub
					module = trading_hub
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					building = offworld_trading_company
					owner = event_target:citadel_council
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = tomdak_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = listening_post
					owner = event_target:citadel_council
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = cerberus_empire
				any_system_within_border = {
					has_star_flag = anadius_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = cronos_station
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = anadius_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lv426_system
				}
				create_starbase = {
					size = starbase_starport
					module = hangar_bay
					module = trading_hub
					building = hydroponics_bay
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = patella_system
				}
				create_starbase = {
					size = starbase_starport
					module = hangar_bay
					module = trading_hub
					building = hydroponics_bay
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = amazon_system
				}
				create_starbase = {
					size = starbase_starport
					module = hangar_bay
					module = trading_hub
					building = crew_quarters
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = strenuus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = columbia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = yangtze_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = lazarus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = 41275l_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = netheril_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = dakka_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:cerberus_empire
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = disciples_of_nazara
				any_system_within_border = {
					has_star_flag = theseaofstorms_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = heretic_station
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = theseaofstorms_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = fleet_academy
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = haelazi_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = fleet_academy
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = xelazi_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = crew_quarters
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = yeelixeeme_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = yassu_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = seefisgaca_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = sesost_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = hong_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = vamshi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = grissom_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = tereshkova_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = gagarin_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:disciples_of_nazara
				}
				btr_generate_stations = yes
			}
		}
		# if = {
		# 	limit = {
		# 		has_country_flag = cat6
		# 		any_system_within_border = {
		# 			has_star_flag = elunia_system
		# 		}
		# 	}	
		# 	random_system = {
		# 		limit = {
		# 			has_star_flag = elunia_system
		# 		}
		# 		create_starbase = {
		# 			size = starbase_starport
		# 			owner = event_target:cat6
		# 		}
		# 		btr_generate_stations = yes
		# 	}
		# }
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = lystheni_order
				any_system_within_border = {
					has_star_flag = taesin_system
				}
			}
			random_owned_planet = {
				limit = {
					has_planet_flag = sepkai_planet
				}
				set_capital = yes
			}	
			random_system = {
				limit = {
					has_star_flag = taesin_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = fleet_academy
					owner = event_target:lystheni_order
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = zuzel_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:lystheni_order
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = omega_empire
				any_system_within_border = {
					has_star_flag = sahrabarik_system
				}
			}	
			random_owned_planet = {
				limit = {
					has_planet_flag = omega_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = arinlarkan_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:omega_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = arinlarkan_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = hydroponics_bay
					owner = event_target:omega_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = kairavamori_system
				}
				create_starbase = {
					size = starbase_starport
					module = trading_hub
					module = hangar_bay
					building = crew_quarters
					owner = event_target:omega_empire
				}
				btr_generate_stations = yes
			}
			random_system = {
				limit = {
					has_star_flag = amada_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:omega_empire
				}
				btr_generate_stations = yes
			}		
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = noveria_development_corporation
				any_system_within_border = {
					has_star_flag = pax_system
				}
			}	
			random_owned_planet = {
				limit = {
					has_planet_flag = noveria_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = pax_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:noveria_development_corporation
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = wrill_mining_consortium
				any_system_within_border = {
					has_star_flag = malgus_system
				}
			}	
			random_owned_planet = {
				limit = {
					has_planet_flag = wrill_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = malgus_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:wrill_mining_consortium
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = relic_mineral_works
				any_system_within_border = {
					has_star_flag = relic_system
				}
			}	
			random_owned_planet = {
				limit = {
					has_planet_flag = drifting_skies_habitat
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = relic_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:relic_mineral_works
				}
				btr_generate_stations = yes
			}
		}	
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = united_anhur_corporations
				any_system_within_border = {
					has_star_flag = amun_system
				}
			}	
			random_owned_planet = {
				limit = {
					has_planet_flag = anhur_planet
				}
				set_capital = yes
			}
			random_system = {
				limit = {
					has_star_flag = amun_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:united_anhur_corporations
				}
				btr_generate_stations = yes
			}
		}	
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = asteria_agriculture
				any_system_within_border = {
					has_star_flag = hekate_system
				}
			}	
			random_system = {
				limit = {
					has_star_flag = hekate_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = offworld_trading_company
					owner = event_target:asteria_agriculture
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = raloi_republic
				any_system_within_border = {
					has_star_flag = azedes_system
				}
			}	
			random_system = {
				limit = {
					has_star_flag = azedes_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = trading_hub
					building = crew_quarters
					owner = event_target:raloi_republic
				}
				btr_generate_stations = yes
			}
		}	
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = rachni_hive
				any_system_within_border = {
					has_star_flag = maskimxul_system
				}
			}	
			random_system = {
				limit = {
					has_star_flag = maskimxul_system
				}
				create_starbase = {
					size = starbase_starport
					module = shipyard
					module = hangar_bay
					building = crew_quarters
					owner = event_target:rachni_hive
				}
				btr_generate_stations = yes
			}
		}
		if = {
			limit = {
				galaxy_size = btr_hybrid_400
				has_country_flag = collectors_empire
				any_system_within_border = {
					has_star_flag = tartarus_system
				}
			}	
			random_system = {
				limit = {
					has_star_flag = tartarus_system
				}
				create_starbase = {
					size = starbase_starhold
					module = hangar_bay
					module = hangar_bay
					module = hangar_bay
					module = solar_panel_network
					module = shipyard
					module = shipyard
					building = fleet_academy
					building = resource_silo
					building = target_uplink_computer
					owner = event_target:collectors_empire
				}
				btr_generate_stations = yes
			}
		}	
	}
}

country_event = {
	id = btr_setup.104
  hide_window = yes
  is_triggered_only = yes
  immediate = {
    if = {
      limit = {
        OR = {
			galaxy_size = btr_hybrid_400
        }
      }
      #Set Contacts
      event_target:asari_republics = {
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
      event_target:salarian_union = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:turian_hierarchy = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:courts_of_dekuuna = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:illuminated_primacy = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:systems_alliance = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:vol_protectorate = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:batarian_hegemony = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:cerberus_empire = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:remnants_of_rakhana = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:aralakh_kahmat = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:lystheni_order = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:omega_empire = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:migrant_fleet = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:gothones_remnant = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:sedriicae_collective = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:vorcha_clandom = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:illium_corporate_interests = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:noveria_development_corporation = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:wrill_mining_consortium = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:united_anhur_corporations = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:relic_mineral_works
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:relic_mineral_works = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:asteria_agriculture
      }
	  event_target:asteria_agriculture = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
      }
	  event_target:asteria_agriculture = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:cerberus_empire
        establish_communications_no_message = event_target:remnants_of_rakhana
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:lystheni_order
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:gothones_remnant
        establish_communications_no_message = event_target:sedriicae_collective
        establish_communications_no_message = event_target:vorcha_clandom
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:relic_mineral_works
	  }
	  event_target:citadel_council = {
        establish_communications_no_message = event_target:asari_republics
        establish_communications_no_message = event_target:salarian_union
        establish_communications_no_message = event_target:turian_hierarchy
        establish_communications_no_message = event_target:courts_of_dekuuna
        establish_communications_no_message = event_target:illuminated_primacy
        establish_communications_no_message = event_target:systems_alliance
        establish_communications_no_message = event_target:vol_protectorate
        establish_communications_no_message = event_target:batarian_hegemony
        establish_communications_no_message = event_target:aralakh_kahmat
        establish_communications_no_message = event_target:omega_empire
        establish_communications_no_message = event_target:migrant_fleet
        establish_communications_no_message = event_target:illium_corporate_interests
        establish_communications_no_message = event_target:noveria_development_corporation
        establish_communications_no_message = event_target:wrill_mining_consortium
        establish_communications_no_message = event_target:united_anhur_corporations
        establish_communications_no_message = event_target:asteria_agriculture
	  }
	  event_target:geth_consensus = {
        establish_communications_no_message = event_target:disciples_of_nazara
	  }
	  event_target:disciples_of_nazara = {
        establish_communications_no_message = event_target:geth_consensus
	  }
	}  	
    #Set Homesystem Survey
    every_owned_planet = {
		solar_system = {
		  every_system_planet = {
			set_surveyed = {
				surveyed = yes
				surveyor = ROOT
			}
        }
      }
    }
	every_country = {
		limit = { 
			has_country_flag = btr_empire
			count_relation = { count > 0 } 
		}
		set_country_flag = Story7
		set_country_flag = has_encountered_other_empire
		set_country_flag = StoryFirst
		set_country_flag = first_alien_life
		every_relation = { 
			limit = { has_country_flag = btr_empire }
			set_country_flag = Story7
			set_country_flag = has_encountered_other_empire
			set_country_flag = StoryFirst
			set_country_flag = first_alien_life
		}
	}
  }
}


# Set Protectorates
country_event = {
	id = btr_setup.105
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { galaxy_size = btr_hybrid_400 exists = event_target:vol_protectorate exists = event_target:turian_hierarchy }
			event_target:vol_protectorate = {
				establish_communications_no_message = event_target:turian_hierarchy
				set_subject_of = { who = event_target:turian_hierarchy subject_type = special_protectorate }
			}
		}
		if = {
			limit = { galaxy_size = btr_hybrid_400 exists = event_target:asteria_agriculture exists = event_target:asari_republics }
			event_target:asteria_agriculture = {
				establish_communications_no_message = event_target:asari_republics
				set_subject_of = { who = event_target:asari_republics subject_type = subsidiary }				
			}
		}
	}
}

# Set Minor Empires
country_event = {
    id = btr_setup.106
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        if = {
            limit = {
                has_country_flag = btr_minor
            }
            add_modifier = {
                modifier = btr_minor_empire
                days = 10950
            }
        }    
        if = {    
            limit = {
                has_country_flag = independent_colony
            }
            add_modifier = {
                modifier = btr_independent_colony
                days = -1
            }
        }
	}
}

event = {
    id = btr_setup.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galaxy_species = {
			switch = {
				trigger = is_species_class
				MECASA = {
					set_homeworld = {
						planet_flag = "thessia_planet"
						planet_type = "normal"
					}
				}	
				SAL = {
					set_homeworld = {
						planet_flag = "surkesh_planet"
						planet_type = "normal"
					}			
				}
				TUR = {
					set_homeworld = {
						planet_flag = "palaven_planet"
						planet_type = "normal"
					}			
				}
				ELC = {
					set_homeworld = {
						planet_flag = "dekuuna_planet"
						planet_type = "normal"
					}			
				}
				HAN = {
					set_homeworld = {
						planet_flag = "kahje_planet"
						planet_type = "normal"
					}			
				}
				HUM = {
					set_homeworld = {
						planet_flag = "earth_planet"
						planet_type = "normal"
					}			
				}
				VOL = {
					set_homeworld = {
						planet_flag = "irune_planet"
						planet_type = "normal"
					}			
				}
				BAT = {
					set_homeworld = {
						planet_flag = "kharshan_planet"
						planet_type = "normal"
					}			
				}
				DRE = {
					set_homeworld = {
						planet_flag = "rakhana_planet"
						planet_type = "normal"
					}			
				}
				KRO = {
					set_homeworld = {
						planet_flag = "tuchanka_planet"
						planet_type = "normal"
					}			
				}
				FOR = {
					set_homeworld = {
						planet_flag = "regdika_planet"
						planet_type = "normal"
					}			
				}
				YAH = {
					set_homeworld = {
						planet_flag = "parnack_planet"
						planet_type = "normal"
					}			
				}
				VOR = {
					set_homeworld = {
						planet_flag = "heshtok_planet"
						planet_type = "normal"
					}			
				}
				GET = {
					set_homeworld = {
						planet_flag = "rannoch_planet"
						planet_type = "normal"
					}			
				}
				GOT = {
					set_homeworld = {
						planet_flag = "vindicta_planet"
						planet_type = "normal"
					}			
				}
			}
		}
	}
}

country_event = {
    id = btr_setup.201
	hide_window = yes
    is_triggered_only = yes
    immediate = { 		
        every_owned_pop = {
            limit = { is_same_species_class = root.owner_main_species }
            modify_species = { 
                species = this 
                base = none 
                effect = { save_event_target_as = temp_species }
            }
        }
        if = {
            limit = { exists = event_target:temp_species event_target:temp_species = { is_same_species_class = root.owner_main_species } }
            change_dominant_species = { species = event_target:temp_species change_all = yes }
        }
    }
}

country_event = {
	id = btr_setup.202
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = omega_empire
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = MECASA 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = citadel_council
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = MECASA 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = noveria_development_corporation
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = SAL 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = wrill_mining_consortium
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = KRO 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}		
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = relic_mineral_works
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = HAN 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}			
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = united_anhur_corporations
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = HUM 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = illuminated_primacy
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = HAN 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
		if = {
			limit = { 
				galaxy_size = btr_hybrid_400
				has_country_flag = illium_corporate_interests
			}
			every_owned_pop_species = {
				limit = {
					NOR = { 
						is_species_class = MECASA 
					}
				}
				set_citizenship_type = { country = root type = citizenship_full cooldown = no }
				set_living_standard = { country = root type = living_standard_normal cooldown = no }
			}
		}
	}
}



# This sets the names for megacorp empires because buggy and this temp fixes it
# Code is self explanatory I think if country has that flag change name to name set
country_event = {
	id = btr_setup.203
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asari_republics
				}
				set_name = "Asari Republics"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = salarian_union
				}
				set_name = "Salarian Union"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = turian_hierarchy
				}
				set_name = "Turian Hierarchy"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = courts_of_dekuuna
				}
				set_name = "Courts of Dekuuna"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = illuminated_primacy
				}
				set_name = "Illuminated Primacy"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = systems_alliance
				}
				set_name = "Systems Alliance"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = vol_protectorate
				}
				set_name = "Vol Protectorate"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = batarian_hegemony
				}
				set_name = "Batarian Hegemony"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = cerberus_empire
				}
				set_name = "Cerberus"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = remnants_of_rakhana
				}
				set_name = "Remnants of Rakhana"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = aralakh_kahmat
				}
				set_name = "Aralakh Kahmat"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = lystheni_order
				}
				set_name = "Lystheni Order"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = omega_empire
				}
				set_name = "Omega"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = migrant_fleet
				}
				set_name = "The Migrant Fleet"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = gothones_remnant
				}
				set_name = "Gothones Remnant"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = sedriicae_collective
				}
				set_name = "Sed'riicae Collective"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = parnack_regime_primitive
				}
				set_name = "Parnack Regime"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = parnack_regime_player
				}
				set_name = "Parnack Regime"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = raloi_republic
				}
				set_name = "Raloi Republic"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = vorcha_clandom
				}
				set_name = "Vorcha Clandom"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = illium_corporate_interests
				}
				set_name = "Illium Corporate Interests"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = noveria_development_corporation
				}
				set_name = "Noveria Development Corporation"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = relic_mineral_works
				}
				set_name = "Relic Mineral Works"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = united_anhur_corporations
				}
				set_name = "United Anhur Corporations"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = wrill_mining_consortium
				}
				set_name = "Wrill Mining Consortium"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asteria_agriculture
				}
				set_name = "Asteria Agriculture"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = collectors_empire
				}
				set_name = "The Collectors"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = geth_consensus
				}
				set_name = "Geth Consensus"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = disciples_of_nazara
				}
				set_name = "Disciples of Nazara"
			}
		}
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = rachni_hive
				}
				set_name = "Rachni Hive"
			}
		}
	}
}
country_event = {
	id = btr_setup.109
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_country_flag = btr_empire
			}
			every_country = {
				give_technology = {
					tech = tech_automated_exploration
				}
			}
		}
		
	}
}
country_event =  {
	id = btr_setup.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_country_flag = btr_empire
			}
			every_country = {
				give_technology = {
					tech = tech_production_increase
				}
			}
		}
	}
}
country_event = {
	id = btr_setup.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# Destroys player ships (military) to replace them with corvettes of their design
		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_military owner = { is_ai = no }
			}
			fleet = {
				if = {
					limit = { exists = leader}
					leader = { unassign_leader = this}
				}
				set_name = "DISBAND ME"
				delete_fleet = {
					target = this
					destroy_template = yes
				}
			}
			delete_ship = this
		}
		# Sets star as spawn location of the fleet
		root.capital_scope = {
			star = {
				save_event_target_as = fleet_location
			}
		}	
		# Creates 3 Corvettes for each empire
		create_fleet = {
			effect = {
				set_owner = root
				set_location = event_target:fleet_location
				while = {
					count = 3
					create_btr_corvette = yes
					set_location = {
						target = event_target:fleet_location
						distance = 80
						angle = random
					}
				}
			}
		}
		if = {
			limit = { is_ai = yes }
			# creates 3 scientists for each empire
			while = {
				count = 3
				create_leader = {
					class = scientist
					species = owner_main_species
					name = random
					skill = 1
				}
			}
			# creates a science ship for the ai empires
			while = {
				count = 1
				create_fleet = {
					effect = {
						set_owner = root
						create_ship = {
							name = random 
							random_existing_design = science
							graphical_culture = owner
							prefix = no
						}
						set_fleet_stance = evasive
						set_location = root.capital_scope.star
						owner = {
							create_leader = {
								class = scientist
								sub_type = survey
								name = random
								species = owner_main_species
							}
						}
						set_leader = last_created_leader
					}
				}
			}
			# Creates a construction ship for ai empires
			while = {
				count = 1
				create_fleet = {
					effect = {
						set_owner = root
						create_ship = {
							name = random 
							design = last_created_design
							random_existing_design = constructor
							graphical_culture = owner
							prefix = no
						}
						set_fleet_stance = evasive
						set_location = root.capital_scope.star
					}
				}
			}
		}
	}
}

country_event = {
	id = btr_setup.4
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = {
		every_galaxy_planet = { 
			limit = {  
				OR = {
					is_planet_class = pc_dextro_continental
					is_planet_class = pc_dextro_prairie
					is_planet_class = pc_dextro_ocean
					is_planet_class = pc_dextro_mangrove
					is_planet_class = pc_dextro_desert
					is_planet_class = pc_dextro_supercon
					is_planet_class = pc_dextro_tepid
					is_planet_class = pc_dextro_lake
					is_planet_class = pc_dextro_med
					is_planet_class = pc_dextro_semiarid
					is_planet_class = pc_dextro_savannah
					is_planet_class = pc_dextro_aquatic
					is_planet_class = pc_dextro_aquaticcity
					is_planet_class = pc_dextro_hajungle
					is_planet_class = pc_dextro_superhabitable
					is_planet_class = pc_dextro_tropical
					is_planet_class = pc_dextro_biolumen
					is_planet_class = pc_dextro_hadesert
					is_planet_class = pc_dextro_primal
					is_planet_class = pc_dextro_steppe
					is_planet_class = pc_dextro_desertislands
					is_planet_class = pc_dextro_duneforest
					is_planet_class = pc_dextro_oasis
					is_planet_class = pc_dextro_arid
					is_planet_class = pc_dextro_coral
					is_planet_class = pc_dextro_veld
					is_planet_class = pc_dextro_tidallylocked
					is_planet_class = pc_dextro_wetswamp
					is_planet_class = pc_dextro_aquaticcold
					is_planet_class = pc_dextro_boreal
					is_planet_class = pc_dextro_forest
					is_planet_class = pc_dextro_swamp
					is_planet_class = pc_dextro_mesa
					is_planet_class = pc_dextro_aquatichot
					is_planet_class = pc_dextro_geothermal
					is_planet_class = pc_dextro_karst
					is_planet_class = pc_dextro_lanthanide
					is_planet_class = pc_dextro_storm
					is_planet_class = pc_dextro_tundra
					is_planet_class = pc_dextro_cascadian
					is_planet_class = pc_dextro_highland
					is_planet_class = pc_dextro_sandsea
					is_planet_class = pc_dextro_outback	
					is_planet_class = pc_dextro_aquifer
					is_planet_class = pc_dextro_subarctic
					is_planet_class = pc_dextro_lichen
					is_planet_class = pc_dextro_mud
					is_planet_class = pc_dextro_alpine
					is_planet_class = pc_dextro_glacio
					is_planet_class = pc_dextro_eyeball
					is_planet_class = pc_dextro_rogue
					is_planet_class = pc_dextro_snow
					is_planet_class = pc_dextro_arctic
					is_planet_class = pc_dextro_glacial
					is_planet_class = pc_dextro_aeolian
					is_planet_class = pc_dextro_frozen_desert
					is_planet_class = pc_dextro_antarctic
					is_planet_class = pc_dextro_nuked
					is_planet_class = pc_dextro_retinal
					is_planet_class = pc_dextro_ash
					is_planet_class = pc_dextro_ashcity
					is_planet_class = pc_dextro_ashring
					is_planet_class = pc_dextro_acid
					is_planet_class = pc_dextro_ammonia
					is_planet_class = pc_dextro_ammoniacity
					is_planet_class = pc_dextro_ammoniaring
					is_planet_class = pc_dextro_methane
					is_planet_class = pc_dextro_methanecity
					is_planet_class = pc_dextro_methanering
					is_planet_class = pc_dextro_sulfur
					is_planet_class = pc_dextro_sulfurcity
					is_planet_class = pc_dextro_sulfurring
					is_planet_class = pc_dextro_irradiated
				}
			}	
			random_list = {
				100 = { 
					add_modifier = { modifier = dextro_planet days = -1	} 
				}
			}
		}
	}
}

# country_event = {
# 	id = btr_setup.104
# 	hide_window = yes

# 	is_triggered_only = yes

# 	immediate = {
# 		if = {
# 			limit = {
# 				has_country_flag = council_race 
# 			}

# 		set_country_flag = first_contact_event
# 		set_country_flag = Story2 # Already encountered spacefarers
# 		add_tradition = tr_diplomacy_adopt
# 		add_tradition = tr_diplomacy_the_federation
# 		event_target:citadel_council = {
# 			create_starting_leaders = yes
# 			# country_event = { id = game_start.9 }
# 			# country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
# 			join_alliance = { who = root override_requirements = yes }
# 		}
# 		event_target:asari_republics = {
# 			create_starting_leaders = yes
# 			# country_event = { id = game_start.9 }
# 			# country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
# 			join_alliance = { who = root override_requirements = yes }
# 		}
# 		event_target:turian_hierarchy = {
# 			create_starting_leaders = yes
# 			# country_event = { id = game_start.9 }
# 			# country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
# 			join_alliance = { who = root override_requirements = yes }
# 		}
# 		event_target:salarian_union = {
# 			create_starting_leaders = yes
# 			# country_event = { id = game_start.9 }
# 			# country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
# 			join_alliance = { who = root override_requirements = yes }
# 		}
# 		# if = {
# 		# 	limit = { has_origin = origin_common_ground }
# 		# 	event_target:fed_member_1 = {
# 		# 		add_opinion_modifier = {
# 		# 			who = root
# 		# 			modifier = opinion_common_ground
# 		# 		}
# 		# 		add_trust = {
# 		# 			amount = 50
# 		# 			who = root
# 		# 		}
# 		# 		add_trust = {
# 		# 			amount = 50
# 		# 			who = event_target:fed_member_2
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 60
# 		# 			who = root
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 60
# 		# 			who = event_target:fed_member_2
# 		# 		}
# 		# 	}
# 		# 	event_target:fed_member_2 = {
# 		# 		add_opinion_modifier = {
# 		# 			who = root
# 		# 			modifier = opinion_common_ground
# 		# 		}
# 		# 		add_trust = {
# 		# 			amount = 50
# 		# 			who = root
# 		# 		}
# 		# 		add_trust = {
# 		# 			amount = 50
# 		# 			who = event_target:fed_member_1
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 60
# 		# 			who = root
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 60
# 		# 			who = event_target:fed_member_1
# 		# 		}
# 		# 	}
# 		# 	add_opinion_modifier = {
# 		# 		who = event_target:fed_member_1
# 		# 		modifier = opinion_common_ground
# 		# 	}
# 		# 	add_opinion_modifier = {
# 		# 		who = event_target:fed_member_2
# 		# 		modifier = opinion_common_ground
# 		# 	}
# 		# 	add_trust = {
# 		# 		amount = 50
# 		# 		who = event_target:fed_member_1
# 		# 	}
# 		# 	add_trust = {
# 		# 		amount = 50
# 		# 		who = event_target:fed_member_2
# 		# 	}
# 		# 	add_intel = {
# 		# 		amount = 60
# 		# 		who = event_target:fed_member_1
# 		# 	}
# 		# 	add_intel = {
# 		# 		amount = 60
# 		# 		who = event_target:fed_member_2
# 		# 	}
# 		# }
# 		# if = {
# 		# 	limit = { has_origin = origin_hegemon }
# 		# 	federation = {
# 		# 		set_federation_type = hegemony_federation
# 		# 		set_name = random
# 		# 		set_federation_law = succession_term_years_20
# 		# 	}
# 		# 	event_target:fed_member_1 = {
# 		# 		add_intel = {
# 		# 			amount = 40
# 		# 			who = root
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 40
# 		# 			who = event_target:fed_member_2
# 		# 		}
# 		# 	}
# 		# 	event_target:fed_member_2 = {
# 		# 		add_intel = {
# 		# 			amount = 40
# 		# 			who = root
# 		# 		}
# 		# 		add_intel = {
# 		# 			amount = 40
# 		# 			who = event_target:fed_member_1
# 		# 		}
# 		# 	}
# 		# 	add_intel = {
# 		# 		amount = 40
# 		# 		who = event_target:fed_member_1
# 		# 	}
# 		# 	add_intel = {
# 		# 		amount = 40
# 		# 		who = event_target:fed_member_2
# 		# 	}
# 		# }
# 		set_federation_leader = event_target:citadel_council
# 	}
# }


# country_event = {
# 	id = btr_setup.8
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		if = {
# 			limit = { 
# 				has_country_flag = parnack_regime_player 
# 			}
# 			random_owned_planet = {
# 					limit = {
# 						has_planet_flag = parnack_planet
# 					}
# 				generate_btr_parnack_regime_capitol_buildings = yes
# 			}
# 		}
# 	}
# }


# country_event = {
# 	id = btr_setup.104
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		if = {
# 			limit = {
# 				has_country_flag = asari_republics
# 			}
# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Asari 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}

# 					while = {
# 						count = 1
# 						create_ship = {
# 							name = "Destiny Ascension"
# 							random_existing_design = battleship
# 						}
# 					}

# 					set_location = prev.capital_star
# 				}
# 				name = "Asari 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Asari 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Asari 3rd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Asari 4th Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Asari 5th Fleet"
# 			}
# 		}	

# 		if = {
# 			limit = {
# 				has_country_flag = turian_hierarchy
# 			}
# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Turian 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 32
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 3rd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 7
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 4th Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 7
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 5th Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 7
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 6th Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 7
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 12
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Turian 7th Fleet"
# 			}
# 		}	

# 		if = {
# 			limit = {
# 				has_country_flag = salarian_union
# 			}
# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Salarian 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Salarian 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Salarian 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Salarian 3rd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 33
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Salarian 4th Fleet"
# 			}
# 		}	


# 		if = {
# 			limit = {
# 				has_country_flag = courts_of_dekuuna
# 			}
# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Elcor 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 18
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 17
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Elcor 1st Fleet"
# 			}
# 		}	


# 		if = {
# 			limit = {
# 				has_country_flag = illuminated_primacy
# 			}
# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Hanar 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 14
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 1
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}
# 				}
# 				name = "Hanar 1st Fleet"

# 			}
# 		}		

# 		if = {
# 			limit = {
# 				has_country_flag = systems_alliance
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = colonizer
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Human 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 27
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 2
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Alliance 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 26
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 2
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Alliance 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 26
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 2
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Alliance 3rd Fleet"
# 			}
# 		}			

# 		if = {
# 			limit = {
# 				has_country_flag = vol_protectorate
# 			}

# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Vol 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 5
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Volus 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Volus 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 6
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Volus 3rd Fleet"
# 			}
# 		}

# 		if = {
# 			limit = {
# 				has_country_flag = batarian_hegemony
# 			}

# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Batarian 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 24
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 11
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 1
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Batarian 1st Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 24
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 1
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Batarian 2nd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 24
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}

# 					while = {
# 						count = 1
# 						create_ship = {
# 							name = random
# 							random_existing_design = battleship
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Batarian 3rd Fleet"
# 			}

# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 9
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 23
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}

# 					while = {
# 						count = 10
# 						create_ship = {
# 							name = random
# 							random_existing_design = cruiser
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Batarian 3rd Fleet"
# 			}
# 		}					

# 		if = {
# 			limit = {
# 				has_country_flag = remnants_of_rakhana
# 			}

# 			#constructor
# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = constructor
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			create_fleet = {
# 				effect = {
# 					set_owner = prev

# 					create_ship = {
# 						name = random
# 						random_existing_design = science
# 					}

# 					set_fleet_stance = evasive
# 					set_location = prev.capital_star
# 				}
# 			}

# 			#Batarian 1st Fleet
# 			create_fleet = {
# 				set_take_point = yes
# 				effect = {
# 					set_owner = prev

# 					while = {
# 						count = 8
# 						create_ship = {
# 							name = random
# 							random_existing_design = corvette
# 						}
# 					}

# 					while = {
# 						count = 4
# 						create_ship = {
# 							name = random
# 							random_existing_design = destroyer
# 						}
# 					}
# 					set_location = prev.capital_star
# 				}
# 				name = "Drell 1st Fleet"
# 			}
# 		}	
# 	}
# }

















		# if = {
		# 	limit = {
		# 		has_country_flag = migrant_fleet
		# 	}
		# 	create_fleet = {
		# 		effect = {
		# 			set_owner = event_target:migrant_fleet

		# 			create_ship = {
		# 				name = Rayya
		# 				random_existing_design = colonizer
		# 			}

		# 			set_fleet_stance = evasive
		# 			#set_location = prev.capital_star
		# 			set_location = prev.capital_scope.star
		# 		}	
		# 	}

		# 	#constructor
		# 	create_fleet = {
		# 		effect = {
		# 			set_owner = prev

		# 			create_ship = {
		# 				name = random
		# 				random_existing_design = constructor
		# 			}

		# 			set_fleet_stance = evasive
		# 			set_location = prev.capital_star
		# 		}
		# 	}

		# 	create_fleet = {
		# 		effect = {
		# 			set_owner = prev

		# 			create_ship = {
		# 				name = random
		# 				random_existing_design = science
		# 			}

		# 			set_fleet_stance = evasive
		# 			set_location = prev.capital_star
		# 		}
		# 	}

		# 	#military
		# 	create_fleet = {
		# 		set_take_point = yes
		# 		effect = {
		# 			set_owner = prev

		# 			while = {
		# 				count = 92
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = corvette
		# 				}
		# 			}

		# 			while = {
		# 				count = 35
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = destroyer
		# 				}
		# 			}

		# 			while = {
		# 				count = 8
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = cruiser
		# 				}
		# 			}

		# 			set_location = prev.capital_star
		# 		}
		# 		name = "Migrant Fleet"
		# 	}

		# 	create_fleet = {
		# 		set_take_point = yes
		# 		effect = {
		# 			set_owner = prev

		# 			while = {
		# 				count = 27
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = corvette
		# 				}
		# 			}

		# 			while = {
		# 				count = 2
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = destroyer
		# 				}
		# 			}

		# 			while = {
		# 				count = 8
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = cruiser
		# 				}
		# 			}

		# 			set_location = prev.capital_star
		# 		}
		# 		name = "Migrant Fleet"
		# 	}

		# 	create_fleet = {
		# 		set_take_point = yes
		# 		effect = {
		# 			set_owner = prev
		# 			while = {
		# 				count = 3
		# 				create_ship = {
		# 					name = random
		# 					random_existing_design = colonizer
		# 				}
		# 			}
		# 			set_location = prev.capital_star
		# 		}
		# 		name = "Civilian Fleet"
		# 	}
		# }