
namespace = btr_setup

# Kill Vanilla Countries
event = {
	id = btr_setup.100
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_country = {
			limit = {
				is_country_type = default
				NOT = { has_country_flag = btr_empire }
				is_ai = yes
			}
			erase_invalid_spawn_system = yes
		}
	}
}

# Add starting resources
country_event = {
	id = btr_setup.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_resource = { energy = 200	}
		add_resource = { minerals = 200 }
		add_resource = { alloys = 200	}
		add_resource = { influence = 200 }
		add_resource = { food = 400	}
		add_resource = { consumer_goods = 200 }
	}
}

country_event = {
    id = btr_setup.2
	hide_window = yes
    is_triggered_only = yes
    immediate = { 		
        random_owned_pop = {
            limit = { is_same_species_class = root.owner_main_species }
            modify_species = { 
                species = this 
                base = none 
                effect = { save_event_target_as = temp_species }
            }
        }
        if = {
            limit = { exists = event_target:temp_species event_target:temp_species = { is_same_species_class = root.owner_main_species } }
            change_dominant_species = { species = event_target:temp_species change_all = yes }
        }
    }
}

event = {
    id = btr_setup.201
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galaxy_species = {
			switch = {
				trigger = is_species_class
				MECASA = {
					set_homeworld = {
						planet_flag = "thessia_planet"
						planet_type = "normal"
					}
				}	
				SAL = {
					set_homeworld = {
						planet_flag = "surkesh_planet"
						planet_type = "normal"
					}			
				}
				TUR = {
					set_homeworld = {
						planet_flag = "palaven_planet"
						planet_type = "normal"
					}			
				}
			}
		}
	}
}

  country_event = {
	id = btr_setup.102
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_modifier = {
			modifier = mec_asari_mod_origin_thessia_stagnation
			years = 20
		}
		random_owned_planet = {
			limit = { 
				has_planet_flag = thessia_planet 
			}
			create_archaeological_site = mec_asari_site_thessia_beacon
		}
		if = {
			limit = {
				has_origin = mec_asari_origin_thessia
				any_system_within_border = {
					has_star_flag = parnitha_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = tomaros_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = ialessa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = orisoni_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = vernio_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = teyolia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = kypladon_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = nahuala_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = fotia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = mitrios_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = elensia_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
			random_system = {
				limit = {
					has_star_flag = pelion_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:asari_republics
				}
			}
		}
	}
}

country_event = {
	id = btr_setup.1021
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_origin = origin_turian_hierarchy
				any_system_within_border = {
					has_star_flag = trebia_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = orachorum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = navale_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = castellus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = centrixaurum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = gemmae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = caestus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = arrae_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = nura_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = talava_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = mactare_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = narbo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = laudate_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = sabulum_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = terevan_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
			random_system = {
				limit = {
					has_star_flag = nedlus_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:turian_hierarchy
				}
			}
		}
	}
}

country_event = {
	id = btr_setup.1022
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_origin = origin_salarian_union
				any_system_within_border = {
					has_star_flag = pranas_system
				}
			}
			random_system = {
				limit = {
					has_star_flag = ruoshca_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = vothi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = rothila_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = maceddei_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = gorot_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = sovak_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = limron_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = antillin_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = vildisa_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = anunilibse_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = bedi_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
			random_system = {
				limit = {
					has_star_flag = strabo_system
				}
				create_starbase = {
					size = starbase_outpost
					owner = event_target:salarian_union
				}
			}
		}
	}
}

# country_event = {
#     id = btr_setup.2
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = mec_asari_origin_thessia
# 			}
# 			save_event_target_as = mec_asari_thessia_country
# 			species = { save_event_target_as = mec_asari_thessia_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = mec_asari_origin_illium
# 			}
# 			save_event_target_as = mec_asari_illium_country
# 			species = { save_event_target_as = mec_asari_illium_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_omega
# 			}
# 			save_event_target_as = btr_asari_omega_country
# 			species = { save_event_target_as = btr_asari_omega_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:mec_asari_thessia_country
# 					is_same_value = event_target:mec_asari_illium_country
# 					is_same_value = event_target:btr_asari_omega_country
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:mec_asari_main_country }
# 				}
# 				save_global_event_target_as = mec_asari_main_country
# 				species = { save_global_event_target_as = mec_asari_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:mec_asari_planet_thessia
# 					}
# 					event_target:mec_asari_main_species = {
# 						set_species_homeworld = event_target:mec_asari_planet_thessia
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:mec_asari_main_country
# 					OR = {
# 						species = { is_same_value = event_target:mec_asari_thessia_species }
# 						species = { is_same_value = event_target:mec_asari_illium_species }
# 						species = { is_same_value = event_target:btr_asari_omega_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:mec_asari_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# country_event = {
#     id = btr_setup.201
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = origin_salarian_union
# 			}
# 			save_event_target_as = btr_salarian_union_country
# 			species = { save_event_target_as = btr_salarian_surkesh_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_noveria_development_corporation
# 			}
# 			save_event_target_as = btr_noveria_development_corporation_country
# 			species = { save_event_target_as = btr_salarian_noveria_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:btr_salarian_union_country
# 					is_same_value = event_target:btr_noveria_development_corporation_country
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:btr_salarian_main_country }
# 				}
# 				save_global_event_target_as = btr_salarian_main_country
# 				species = { save_global_event_target_as = btr_salarian_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:btr_salarian_planet_surkesh
# 					}
# 					event_target:btr_salarian_main_species = {
# 						set_species_homeworld = event_target:btr_salarian_planet_surkesh
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:btr_salarian_main_country
# 					OR = {
# 						species = { is_same_value = event_target:btr_salarian_surkesh_species }
# 						species = { is_same_value = event_target:btr_salarian_noveria_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:btr_salarian_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# country_event = {
#     id = btr_setup.202
#     hide_window = yes
#     #fire_only_once = yes
# 	is_triggered_only = yes
	
#     immediate = {
# 		# If any "canon" asari planets exist, save their owners
# 		random_country = {
# 			limit = {
# 				has_origin = origin_systems_alliance
# 			}
# 			save_event_target_as = btr_systems_alliance_country
# 			species = { save_event_target_as = btr_human_earth_species }
# 		}
# 		random_country = {
# 			limit = {
# 				has_origin = origin_cerberus
# 			}
# 			save_event_target_as = btr_cerberus_country
# 			species = { save_event_target_as = btr_human_cronos_species }
# 		}
# 		# Check for the first "canon" asari species generated by the game.
# 		# This is to make sure it's folded into the main species on the list instead of being shown in the drop-down.
# 		every_country = {
# 			limit = {
# 				OR = {
# 					is_same_value = event_target:btr_systems_alliance_country
# 					is_same_value = event_target:btr_human_cronos_species
# 				}
# 			}
# 			if = {
# 				limit = {
# 					NOT = { exists = event_target:btr_human_main_country }
# 				}
# 				save_global_event_target_as = btr_human_main_country
# 				species = { save_global_event_target_as = btr_human_main_species }
# 				# If Thessia exists, set it as the main asari species homeworld
# 				if = {
# 					limit = {
# 						exists = event_target:btr_human_planet_earth
# 					}
# 					event_target:btr_human_main_species = {
# 						set_species_homeworld = event_target:btr_human_planet_earth
# 					}
# 				}
# 			}
# 		}
# 		# Check for duplicate asari offshots and merge them all into one species
# 		every_country = {
# 			if = {
# 				limit = {
# 					exists = event_target:btr_human_main_country
# 					OR = {
# 						species = { is_same_value = event_target:btr_human_earth_species }
# 						species = { is_same_value = event_target:btr_human_cronos_species }
# 					}
# 				}
# 				change_dominant_species = {
# 					species = event_target:btr_human_main_species
# 					change_all = yes
# 				}
# 			}
# 		}
#     }
# }

# Set Volus as Protectorate
country_event = {
	id = btr_setup.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = event_target:vol_protectorate exists = event_target:turian_hierarchy }
			event_target:vol_protectorate = {
				establish_communications_no_message = event_target:turian_hierarchy
				set_subject_of = { who = event_target:turian_hierarchy subject_type = special_protectorate }
			}
		}
		if = {
			limit = { exists = event_target:asteria_agriculture exists = event_target:asari_republics }
			event_target:asteria_agriculture = {
				establish_communications_no_message = event_target:asari_republics
				set_subject_of = { who = event_target:asari_republics subject_type = subsidiary }				
			}
		}
	}
}

# this: capital planet
# from: founder species
planet_event = {
	id = btr_setup.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NOR = {
					has_planet_flag = btr_systems_alliance_planet_earth
					has_planet_flag = btr_systems_alliance_planet_mars
					has_planet_flag = btr_collectors_collector_station
					has_planet_flag = btr_cerberus_cronos_station
				}
			}
			generate_btr_start_deposits_and_blockers = yes
		}
	}
}


# Omega Setup continued
country_event = {
	id = btr_setup.6
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_owned_pop_species = {
			limit = {
				NOR = { 
					is_species_class = MECASA 
				}
			}
			set_citizenship_type = { country = root type = citizenship_full cooldown = no }
			set_living_standard = { country = root type = living_standard_normal cooldown = no }
		}
	}
}

# Set Minor Empires
country_event = {
	id = btr_setup.7
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				has_country_flag = btr_minor
			}
			add_modifier = {
				modifier = btr_minor_empire
				days = 10950
			}
			limit = {
				has_country_flag = independent_colony
			}
			add_modifier = {
				modifier = btr_independent_colony
				days = -1
			}
		}
	}
}

country_event = {
	id = btr_setup.8
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { 
				has_country_flag = parnack_regime_player 
			}
			random_owned_planet = {
					limit = {
						has_planet_flag = parnack_planet
					}
				generate_btr_parnack_regime_capitol_buildings = yes
			}
		}
	}
}

#Pregame Genocide
country_event = {
	id = btr_setup.9
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { is_ai = no }
			every_country = {
				every_owned_pop = {
					limit = { NOT = { has_pop_flag = init_spawn } }
					kill_pop = yes
				}
				every_country = {
					every_owned_planet = {
						check_planet_employment = yes				
					}
				}	 	 
			}
		}
	}
}
# This sets the names for megacorp empires because buggy and this temp fixes it
# Code is self explanatory I think if country has that flag change name to name set
country_event = {
	id = btr_setup.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = asari_corporate_interests
				}
				set_name = "Asari Corporate Interest"
			}
		}
	}
}
country_event = {
	id = btr_setup.101
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = noveria_development_corporation
				}
				set_name = "Noveria Development Corporation"
			}
		}
	}
}
country_event = {
	id = btr_setup.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = relic_mineral_works
				}
				set_name = "Relic Mineral Works"
			}
		}
	}
}
country_event = {
	id = btr_setup.103
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = united_anhur_corporations
			}
			set_name = "United Anhur Corporations"
		}
	}
}
}
country_event = {
	id = btr_setup.104
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = wrill_mining_consortium
				}
				set_name = "Wrill Mining Consortium"
			}
		}
	}
}
country_event = {
	id = btr_setup.105
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = regdikan_collective
				}
				set_name = "Regdikan Collective"
			}
		}
	}
}
country_event = {
	id = btr_setup.106
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_country = {
				limit = {
					has_country_flag = lystheni_order
				}
				set_name = "Lystheni Order"
			}
		}
	}
}

country_event = {
	id = btr_setup.107
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#Colony
		if = {
			limit = {
				has_country_flag = quarian_conclave
			}
			create_fleet = {
				effect = {
					set_owner = event_target:quarian_conclave

					create_ship = {
						name = Rayya
						random_existing_design = colonizer
					}

					set_fleet_stance = evasive
					#set_location = prev.capital_star
					set_location = prev.capital_scope.star
				}	
			}

			#constructor
			create_fleet = {
				effect = {
					set_owner = prev

					create_ship = {
						name = random
						random_existing_design = constructor
					}

					set_fleet_stance = evasive
					set_location = prev.capital_star
				}
			}

			#military
			create_fleet = {
				set_take_point = yes
				effect = {
					set_owner = prev

					while = {
						count = 10
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}

					while = {
						count = 5
						create_ship = {
							name = random
							random_existing_design = destroyer
						}
					}

					while = {
						count = 3
						create_ship = {
							name = random
							random_existing_design = cruiser
						}
					}

					while = {
						count = 2
						create_ship = {
							name = random
							random_existing_design = battleship
						}
					}

					set_location = prev.capital_star
				}
			}
		}
	}	
}

